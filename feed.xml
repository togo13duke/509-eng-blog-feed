
  <rss version="2.0">
    <channel>
      <title>509 engineering blogs</title>
      <link>https://engineeringblogs.xyz/</link>
      <description>509 engineering blogs</description>
      
    <item>
      <title>Creating and deploying an OVF Template to support image mode for RHEL at scale</title>
      <link>https://developers.redhat.com/articles/2024/07/15/creating-and-deploying-ovf-template-support-image-mode-rhel-scale</link>
      <description>本文介绍了如何在vSphere环境中创建和部署OVF模板，以支持大规模管理RHEL的镜像模式。通过使用OVF模板，可以简化虚拟机的部署过程，并优化部署时间。文章详细说明了创建OVF模板的步骤，包括使用govc命令行工具和配置文件，以及如何从vSphere内容库部署模板。</description>
    </item>
  
    <item>
      <title>Ansible Collection for Red Hat Runtimes</title>
      <link>https://developers.redhat.com/articles/2024/07/15/ansible-collection-red-hat-runtimes</link>
      <description>本文介绍了如何为Red Hat Runtimes产品选择合适的Ansible集合。文章详细解释了开源版本和商业版本之间的区别，并提供了使用Ansible自动化部署和管理Red Hat Runtimes产品的指南。对于非Red Hat客户，可以使用开源版本，而对于有Red Hat订阅的客户，应使用由Red Hat支持的商业版本。文章还提供了如何安装和使用Ansible集合的示例。</description>
    </item>
  
    <item>
      <title>Integrating a VMDK produced with image mode for RHEL into vSphere</title>
      <link>https://developers.redhat.com/articles/2024/07/15/integrating-vmdk-produced-image-mode-rhel-vsphere</link>
      <description>本文介绍了如何将使用RHEL镜像模式创建的VMDK磁盘镜像集成到vSphere环境中。通过使用govc工具，可以简化与vSphere平台的交互，并实现自动化操作。文章详细说明了如何安装govc、连接到vSphere环境、上传VMDK文件、创建虚拟机以及使用cloud-init进行远程连接配置。</description>
    </item>
  
    <item>
      <title>Creating a VMDK using image mode for Red Hat Enterprise Linux</title>
      <link>https://developers.redhat.com/articles/2024/07/15/creating-vmdk-using-image-mode-red-hat-enterprise-linux</link>
      <description>本文介绍了如何使用Image模式为Red Hat Enterprise Linux创建VMDK虚拟磁盘。通过结合容器技术和传统虚拟机环境，用户可以灵活选择操作方式。文章详细描述了创建RHEL启动镜像的过程，并展示了如何使用bootc-image-builder工具从启动镜像生成VMDK文件，以便在VMware等虚拟化平台中使用。</description>
    </item>
  
    <item>
      <title>React Form Button</title>
      <link>https://www.robinwieruch.de/react-form-button/</link>
      <description>React中，你可以使用表单按钮在服务器组件中触发服务器操作，无需表单字段或数据。这适用于需要通过按钮点击触发服务器操作，而不想使用客户端组件的情况。文章介绍了如何在服务器组件中使用表单按钮，以及如何将其与客户端组件结合使用，以实现更灵活的交互。</description>
    </item>
  
    <item>
      <title>LLM-powered data classification for data entities at scale</title>
      <link>https://engineering.grab.com/llm-powered-data-classification</link>
      <description>Grab公司通过利用大型语言模型（LLM）技术，实现了对海量数据实体的自动化分类，从而提高了数据管理和发现效率。这一创新项目将原本繁琐的手动流程转变为高效系统，显著减少了人工分类时间，并增强了数据安全性和合规性。</description>
    </item>
  
    <item>
      <title>Separating Database Hosts to Optimize Read and Write Operations in Laravel</title>
      <link>https://www.amitmerchant.com/separating-database-hosts-to-optimize-read-and-write-operations-in-laravel/</link>
      <description>Laravel通过分离读写数据库主机来优化读写操作，提高数据库性能。在高流量网站中，读写操作分离可以减少锁等待和I/O竞争，提高读写效率。Laravel简化了配置过程，只需在config/database.php中设置读写主机即可。通过调整配置，可以进一步提升应用性能。</description>
    </item>
  
    <item>
      <title>Notes on "DynamoDB now supports cross-account access. But is that a good idea?"</title>
      <link>https://advancedweb.hu/shorts/notes-on-dynamodb-now-supports-cross-account-access-but-is-that-a-good-idea/</link>
      <description>DynamoDB支持跨账户访问，但作者认为这通常不是一个好主意。他强调，服务应拥有自己的数据，并通过API访问其他服务的数据，以保持安全性和减少耦合。尽管有使用场景，如增强访问控制，但直接访问数据库可能引入意外，影响软件质量。</description>
    </item>
  
    </channel>
  </rss>
