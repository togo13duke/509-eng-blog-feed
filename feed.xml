
  <rss version="2.0">
    <channel>
      <title>509 engineering blogs</title>
      <link>https://engineeringblogs.xyz/</link>
      <description>509 engineering blogs</description>
      
    <item>
      <title>Confluent Champion: The Power of a Learning Culture and Motivated Teams</title>
      <link>https://www.confluent.io/blog/confluent-champion-power-of-motivated-teams/</link>
      <description>康弗伦特冠军Janis Hom分享了她如何通过团队协作和不断学习在康弗伦特公司取得成功。她强调了远程工作的灵活性、对数据治理和合规性的贡献，以及公司文化中鼓励创新和尊重差异的重要性。</description>
    </item>
  
    <item>
      <title>How to Fix ESLint Violations with AI Assistance</title>
      <link>https://www.docker.com/blog/how-to-fix-eslint-violations-with-ai-assistance/</link>
      <description>本文探讨了如何利用人工智能助手解决ESLint代码规范问题。文章介绍了通过AI工具辅助修复代码中的违规行为，并详细说明了如何使用AI助手来识别和修正代码错误，包括对ESLint规则的分析和上下文信息的处理。通过实际案例，展示了AI在代码审查和优化中的潜力。</description>
    </item>
  
    <item>
      <title>Beginner’s guide to GitHub: Merging a pull request</title>
      <link>https://github.blog/developer-skills/github-education/beginners-guide-to-github-merging-a-pull-request/</link>
      <description>GitHub入门指南：合并拉取请求，介绍如何处理合并冲突，包括创建冲突、解决冲突和合并更改，是使用GitHub进行协作开发的关键技能。</description>
    </item>
  
    <item>
      <title>Using Ray inside your Blade views</title>
      <link>https://freek.dev/2752-using-ray-inside-your-blade-views</link>
      <description>在Laravel的Blade视图中使用Ray，Freek Van der Herten分享了他的见解和经验，为现代PHP开发者提供了实用的编程技巧和项目学习心得。</description>
    </item>
  
    <item>
      <title>Custom Spring Boot Actuator Endpoint</title>
      <link>https://vladmihalcea.com/custom-spring-boot-actuator-endpoint/</link>
      <description>本文介绍了如何创建自定义Spring Boot Actuator端点以导出自定义指标和事件。通过配置和实现，可以监控Java Persistence和Hibernate的性能问题，并使用Hypersistence Optimizer工具进行优化。</description>
    </item>
  
    <item>
      <title>How I automate electron-to-chromium updates</title>
      <link>https://kilianvalkhof.com/2024/electron/how-i-automate-electron-to-chromium-updates/</link>
      <description>Kilian Valkhof分享了如何自动化Electron到Chromium的更新过程。他维护了一个NPM包，将Electron版本映射到Chromium版本，方便开发者使用。通过自动化设置，他每15分钟更新依赖项并运行脚本，确保包始终是最新的，同时减少了手动工作。这种自动化提高了更新速度，减少了错误，并节省了大量数据。</description>
    </item>
  
    <item>
      <title>Issues #264 Aug 26, 2024</title>
      <link>https://betterdev.link/issues/264</link>
      <description>本周的编程资源包括挑战传统思维，自己构建搜索引擎和数据库的灵感；深入探讨机器学习基础、Linux管道性能、AWS EBS发展历程等话题；以及一系列编程工具和库的介绍。</description>
    </item>
  
    <item>
      <title>Launching to Lasting: Strategic Foundations for Startup Success</title>
      <link>https://spin.atomicobject.com/foundations-startup-success/</link>
      <description>成功创业的关键在于验证产品与市场的契合度，构建最小可行产品（MVP），平衡速度与质量，以及有效扩展业务。通过深入了解用户需求，快速迭代产品，并采用敏捷方法，初创公司可以建立坚实的基础，以实现可持续增长。</description>
    </item>
  
    <item>
      <title>Inside the long quest to advance Chinese writing technology</title>
      <link>https://www.technologyreview.com/2024/08/26/1096630/chinese-writing-technology-evolution-thomas-mullaney/</link>
      <description>中国文字技术的发展历程充满挑战和创新。从20世纪初的汉字输入系统到现代拼音输入法，历经多次技术变革和尝试。这些努力不仅推动了汉字的标准化和传播，也反映了人类对语言和技术的不断探索。尽管许多早期系统未能成功，但它们为今天的输入法奠定了基础，展现了技术发展的曲折与进步。</description>
    </item>
  
    <item>
      <title>Maybe you will be able to live past 122</title>
      <link>https://www.technologyreview.com/2024/08/26/1096126/aging-health-longevity-lifespan-advances-investment/</link>
      <description>随着科学进步、公众兴趣和前所未有的投资，长寿产业正推动人们更健康地活得更久。研究人员正在探索多种方法，包括细胞重编程、抗衰老药物和清除衰老细胞，以延长人类寿命并逆转衰老迹象。尽管挑战重重，但有望在未来几十年内开发出帮助人们更健康长寿的疗法。</description>
    </item>
  
    <item>
      <title>Running applications with Paketo Buildpacks and Red Hat UBI container images in OpenShift</title>
      <link>https://developers.redhat.com/articles/2024/08/26/running-applications-paketo-buildpacks-and-red-hat-ubi-container-images</link>
      <description>在OpenShift中使用Paketo Buildpacks和Red Hat UBI容器镜像运行应用程序，通过简化构建和部署流程，提高开发效率。本文介绍了如何使用Paketo Buildpacks和Red Hat UBI容器镜像在OpenShift中构建和部署Node.js或Java应用程序，包括设置集群、构建镜像、部署应用程序等步骤。</description>
    </item>
  
    <item>
      <title>CodeSOD: Compile It Yourself</title>
      <link>https://thedailywtf.com/articles/compile-it-yourself</link>
      <description>Sally接手了一个医疗设备项目，发现前技术负责人使用C#代码生成技术来加速开发，但这种方法存在安全风险，可能导致代码被篡改。尽管技术负责人并无恶意，但Sally向老板指出这一风险，老板对此表示担忧。</description>
    </item>
  
    <item>
      <title>Wrap your dependencies</title>
      <link>https://thoughtbot.com/blog/wrap-your-dependencies</link>
      <description>总结：
本文探讨了在软件开发中封装依赖的重要性。通过将行为封装到函数、模块、类或Stimulus控制器中，可以定义统一的接口，简化测试，并便于替换底层实现。这样做有助于提高代码的灵活性和可维护性。</description>
    </item>
  
    <item>
      <title>How to tame evil dependencies</title>
      <link>https://www.thoughtworks.com/insights/articles/how-to-tame-evil-dependencies</link>
      <description>如何驯服“邪恶依赖”

软件团队之间的依赖关系是大型组织中的一个巨大问题。本文探讨了如何应对这些依赖关系，包括识别依赖关系的来源、最小化依赖关系、减轻依赖关系的影响以及持续优化。通过采用跨职能团队、共同标准和整体产品焦点等策略，可以有效地管理依赖关系，提高团队效率和项目成功率。</description>
    </item>
  
    </channel>
  </rss>
